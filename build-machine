#!/bin/bash
# Ubuntu 20.04
# curl -sSL https://raw.githubusercontent.com/hut8/build-machine/master/build-machine | bash
set -euo pipefail

repo_url='https://raw.githubusercontent.com/hut8/build-machine/master'

if ! [ $(id -u) = 0 ]; then
    echo 'this script must be run as root'
    exit 1
fi

user_exists(){ id "$1" &>/dev/null; }

sudo apt update
sudo apt upgrade -y
sudo apt install -y \
    apt-transport-https \
    autoconf \
    automake \
    build-essential \
    curl \
    dnsutils \
    emacs \
    g++ \
    git \
    gnupg \
    htop \
    iotop \
    jq \
    libpq-dev \
    lsb-release \
    moreutils \
    pcregrep \
    pv \
    python3 \
    python3-dev \
    python3-pip \
    python-is-python3 \
    rsync \
    silversearcher-ag \
    texinfo \
    tig \
    tmux \
    toilet \
    wget \
    zsh


# Add docker repository and install docker
mkdir -p /etc/apt/keyrings
docker_keyring_path='/etc/apt/keyrings/docker.gpg'
if [ ! -f "$docker_keyring_path" ]; then
    echo "adding docker keyring to $docker_keyring_path"
    curl -fsSL https://download.docker.com/linux/debian/gpg |
        gpg --dearmor -o "$docker_keyring_path"
fi

docker_source_path='/etc/apt/sources.list.d/docker.list'
docker_source_url='https://download.docker.com/linux/debian'
if [ ! -f $docker_source_path ]; then
    echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=$docker_keyring_path] $docker_source_url $(lsb_release -cs) stable" > "$docker_source_path"
fi
apt update
apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

# docker installs some old version of compose; this is a fix
# curl -L \
#   "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" \
#   -o /usr/local/bin/docker-compose
# chmod +x /usr/local/bin/docker-compose

# Install Go
go_path='/usr/local/go'
go_url_base='https://go.dev/dl'
go_filename='go1.18.linux-amd64.tar.gz'
go_url="${go_url_base}/${go_filename}"
if [[ ! -d $go_path ]]; then
    (
        echo "downloading go from $go_url to $go_path"
        cd /tmp
        curl --location --remote-name --silent --show-error "$go_url"
        tar -C /usr/local -xzf "${go_filename}"
        rm "${go_filename}"
    )
fi


# Create my user
if ! user_exists "liam";
then
    echo 'creating user'
    useradd \
        --comment 'Liam' \
        --user-group \
        --shell /usr/bin/zsh \
        --create-home \
        --groups docker \
        liam
else
    usermod -a -G docker liam # idempotent; returns 0
    chsh --shell /usr/bin/zsh liam # also idempotent
fi

curl -sSL "$repo_url/sudoers" > /etc/sudoers.d/liam

curl -sSL "$repo_url/build-account" |
  sudo --set-home -u liam /usr/bin/zsh
